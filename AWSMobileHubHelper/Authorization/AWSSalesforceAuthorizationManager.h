//
//  AWSSalesforceAuthorizationManager.h
//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to
// copy, distribute and modify it.
//

#import "AWSAuthorizationManager.h"

@interface AWSSalesforceAuthorizationManager : AWSAuthorizationManager

/**
 * Singleton used to authorize user during OAuth2.0
 * @return the singleton
 */
+ (instancetype _Nonnull)sharedInstance;

/**
 * Customize the flow.
 *
 * @param clientID Client ID provided by Salesforce.
 * @param redirectURI Should be you're bundle ID or universal URL
 *          i.e. com.amazonaws.mysampleapp://salesforce/success
 *               https://mysampleapp.amazonaws.com/success
 * @return the singleton
 */
- (void)configureWithClientID:(NSString * _Nonnull)clientID redirectURI:(NSString * _Nonnull)redirectURI;

/**
 * @return The token type. Available after user authorizes app.
 *         i.e. Bearer
 */
- (NSString * _Nullable)getTokenType;

/**
 * @return The instance Salesforce has assigned you. Available after user authorizes app.
 *         i.e. https://na15.salesforce.com/
 */
- (NSString * _Nullable)getInstanceURL;

# pragma mark - Inherited methods

/**
 * Starts the authorization flow. Should be called from main thread.
 *
 * @param authorizeViewController The view controller that user sees right before they should see a login screen.
 * @param completionHandler The code that will follow after receiving successful login. Executes BEFORE login screen is dismissed.
 */
//- (void)authorizeWithView:(UIViewController * _Nonnull)authorizeViewController completionHandler:(void (^ _Nullable)(id _Nullable result, NSError * _Nullable error)) completionHandler;

/**
 * Starts the refresh flow or possibly run the same authorize flow again.
 * Does not check if current accessToken is expired or not.
 *
 * @param refreshCompletionHandler The code that will follow after refreshing accessToken.
 */
//- (void)refresh:(void (^ _Nullable)(id _Nullable result, NSError * _Nullable error))refreshCompletionHandler;

/**
 * This method should be placed in the AppDelegate to listen for the redirect URI.
 *
 * - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation
 *
 * @param refreshCompletionHandler The code that will follow after refreshing accessToken.
 */
//- (BOOL)handleURL:(NSURL * _Nullable)url;

/**
 * @return the accessToken used for API calls
 */
//- (NSString * _Nullable)getAccessToken;

/**
 * Starts the logout flow. Should be called from main thread.
 *
 * @param logoutViewController The view controller that user sees right before they should see a logout indication.
 * @param completionHandler The code that will follow after receiving successful login. Executes BEFORE login screen is dismissed.
 */
//- (void)logout:(UIViewController * _Nonnull)logoutViewController completionHandler:(void (^ _Nullable)(id _Nullable result, NSError * _Nullable error)) completionHandler;

@end
